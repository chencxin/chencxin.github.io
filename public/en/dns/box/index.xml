<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>盒子部署 on athena</title>
    <link>http://athena-book.dns.qihoo.net/en/dns/box/</link>
    <description>Recent content in 盒子部署 on athena</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 24 Feb 2021 11:40:39 +0800</lastBuildDate><atom:link href="http://athena-book.dns.qihoo.net/en/dns/box/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k3s版本安装</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/k3s-install/</link>
      <pubDate>Wed, 24 Feb 2021 12:01:30 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/k3s-install/</guid>
      <description>k3s盒子产品安装指南 当前本地虚拟机安装测试完成。
1、安装环境依赖 即你执行命令的环境，支持 mac 和 linux 环境。如果你是 windows 系统，请使用虚拟机安装 linux。
软件依赖：
 python3 (sudo apt install python3 python3-pip) docker make sshpass  安装环境需要在公司内网环境，因为需要下载安装镜像！ 确认docker已经启动！
请确保执行 git submodule 命令！
git clone git@w.src.corp.qihoo.net:dns/pandora.git git submodule update --init proto ls proto 查看下 proto 文件是否有内容！
使用下面命令测试：
docker ps make python -c &amp;#34;print(&amp;#39;hello&amp;#39;)&amp;#34; 2、安装步骤 查看命令帮助文档
make 2.1、进入安装环境 make k3s 2.2、 安装 查看当前环境的命令帮助文档
make 初始化参数：
make gen 生成的参数在 inventories/gen/host_vars/&amp;lt;host&amp;gt;.yml 测试请自行修改使用到的镜像。
注意：
 安装分为两种方式： 1、分步安装、2、一步安装；分布安装会逐步安装依赖，一步安装会将所有依赖一起安装；一步安装中间如果报错，修复错误问题后，可使用分步安装从报错步骤开始往后安装。
 一、分步安装</description>
    </item>
    
    <item>
      <title>发展</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/feature/</link>
      <pubDate>Thu, 13 May 2021 09:50:07 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/feature/</guid>
      <description>第一期 构建部署相关 1、私有化集群 建设私有化集群是对外私有化部署解决方案的第一步。
 一键部署 方便扩展 安全的配置 集群管理程序化  2、统一网关（微服务） 目前仅有简单网关
缺失：
 服务访问自动tls 自动代理注入 分布式追踪（应用依赖分析） 故障注入 负载均衡  应用状态可见性和可测试。
2、持久存储 目前缺失
持久存储是有状态服务的基础。 持久化存储为数据库和应用提供高可用的数据服务。
 高可用，高性能，稳定 一键部署  3、监控报警 高可用、覆盖全面的监控系统是建设高可用服务的第一步。
监控可以让我们清晰的看到当前系统的运行状态，监控加报警可以提供紧急状态预警。
缺失：
 应用自身状态数据缺失（希望看到应用的健康状态，请求量，延迟和关键指标数据） 组件状态数据缺失（每个组件的运行状态，请求量，延迟，报错等） 应用链路可见性监控  4、日志 当前没有日志系统！
应用日志目前没有严格要求过，但应用有一个标准。
缺失：
 日志收集，持久存储 日志查询 日志报警（sentry） 日志链路分析 分布式追踪系统  5、构建部署 目前的构建部署自动化属于初级阶段。
缺失：
 k8s作为job, 将任务跑到k8s集群 接入有一定成本，有待优化 应用单元测试覆盖  6、项目迭代优化 完善项目迭代流程，小步快走，快速迭代能力，以功能打造产品而不是版本。
越是复杂的系统，越需要系统间解耦。分开独立的迭代子系统，可以极大的减少系统bug。
7、快速的对外应用部署能力 有了基础设施搭建还需要快速的应用部署能力。
operator sdk 和 kubebuilder
用于为kubernetes crd设置控制器/操作符代码库的两个主要工具。主要都是基于k8s的crd资源，差别不是很大，只有支持的特性多少差别。
应用改用 operator sdk 或 kubebuilder部署，提升应用的稳定性和更细粒度的可控性。</description>
    </item>
    
    <item>
      <title>鲲鹏</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/kunpeng/</link>
      <pubDate>Fri, 16 Apr 2021 10:35:44 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/kunpeng/</guid>
      <description>镜像构建： 安装虚拟机： QEMU 运行docker： https://github.com/multiarch/qemu-user-static
node_exporter 手动安装
下载arm64 node_exporter，其它安装配置同x86
k3s 手动安装
安装同x86的rpm包 需要替换k3s和image，
修改启动： k3s.service
改用fannel作为网络插件
应用镜像构建 产出目录： hub.dns.360.cn
安装 需要注意修改 配置文件 中的镜像名；
license初始化修改grafana地址等
clickhouse coredump
https://github.com/ClickHouse/ClickHouse/issues/18121 https://github.com/ClickHouse/ClickHouse/issues/20
最终是由版本： hub.dns.360.cn/library/clickhouse-arm64:20.3.19.4</description>
    </item>
    
    <item>
      <title>讨论</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/chore/</link>
      <pubDate>Wed, 14 Apr 2021 09:34:02 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/chore/</guid>
      <description>1、dns产品使用rpm或者ansible安装？ 安装涉及到：
 dns产品的磁盘分区（数据库） 网卡初始化 密码初始化（grafana,coredns） 配置文件文件生成  优缺点：
rpm:
 安装方便，基本无依赖 只能对系统进行简单的初始化操作 定制化较严重，缺少灵活性  ansible:
 安装有依赖 可以定制系统（磁盘，网络等） 可定制化，安装灵活  2、arm64 image 基础镜像：
library/postgres-arm64 library/php-nginx-arm64 library/openjdk-arm64 library/nginx-worker-arm64 library/nginx-arm64 library/kafka-zookeeper-arm64 library/golang-kafka-arm64 library/golang-arm64 library/clickhouse-arm64 library/ubuntu-arm64 library/alpine-arm64 hub.dns.360.cn/library/node-arm64:10.23.3 hub.dns.360.cn/library/clickhouse-arm64:21.1.2.15 hub.dns.360.cn/library/prometheus:v2.20.1 hub.dns.360.cn/library/dashboard-arm64:v2.0.4 hub.dns.360.cn/library/grafana-arm64:7.1.5
业务相关：
hub.dns.360.cn/dns/kafka-zookeeper-arm64:latest hub.dns.360.cn/dns/nginx-worker-arm64:latest hub.dns.360.cn/dns/postgres-arm64:v2.7.4 hub.dns.360.cn/dns/clickhouse-arm64:v2.7.4
hub.dns.360.cn/dns/coredns-box-prepare-arm64:latest hub.dns.360.cn/dns/coredns-box-arm64:v2.7.5 hub.dns.360.cn/dns/grafana-arm64:v2.7.3 hub.dns.360.cn/dns/prometheus-arm64:v2.7.3 hub.dns.360.cn/dns/cron-report-arm64:v2.7.3 hub.dns.360.cn/dns/sms-arm64:v2.7.4
hub.dns.360.cn/dns/qdns/web-box-prepare-arm64:latest hub.dns.360.cn/dns/web-box-arm64:v2.7.4
hub.dns.360.cn/dns/php-build-arm64:latest hub.dns.360.cn/dns/php-box-arm64:v2.7.6
3、容器用户及进程问题  以postgres为例：  [root@localhost ~]# ps -ef | grep postgres UID PID PPID C STIME TTY TIME CMD 70 2094186 2093529 0 4月16 ?</description>
    </item>
    
    <item>
      <title>海光麒麟机器安装</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/haiguang/</link>
      <pubDate>Mon, 22 Mar 2021 14:52:20 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/haiguang/</guid>
      <description>1、配置文件参数修改
# 禁用下载检查 pandora_enable_download: false pandora_k3s_disable_manager_nic: true enable_kernel_task: false 需要手动执行磁盘初始化： 分区， 目录挂载
2、机器初始化
下载k3s依赖软件：yum install 需要手动执行
安装k3s需要关闭selinux
setenforce 0 修改文件：
/etc/selinux/config 修改行：
SELINUX=disabled 重启系统
禁用firewalld, 它会扰乱iptables
systemctl stop firewalld systemctl disable firewalld 3、 安装k3s</description>
    </item>
    
    <item>
      <title>本脑安装</title>
      <link>http://athena-book.dns.qihoo.net/en/dns/box/local-brain/</link>
      <pubDate>Wed, 24 Feb 2021 11:41:23 +0800</pubDate>
      
      <guid>http://athena-book.dns.qihoo.net/en/dns/box/local-brain/</guid>
      <description>1、机器名不能相同 如果机器名相同，请修改成不同机器名 hostname
2、磁盘创建 为clickhouse创建一个单独的磁盘： 只需要很小即可
lvcreate -L 30G -n clickhouse-hdd VolGroup00 3、配置文件生成及修改 make gen 后生成的配置文件修改：
使用v2.7.3版本
手动修改配置文件： 集群分为master节点和node节点，请分别配置
inventories/gen/hosts
[master] ip1 [node] ip2 [all:children] master node 配置文件复制 目录 inventories/gen/host_vars host1.yml 复制出 host2.yml
更改配置文件参数：
## clickhouse hdd使用磁盘 ## 禁止初始化eth0网络 pandora_local_test: true pandora_k3s_clustered: true 交换kafka和clickhouse的磁盘分区配置
4、安装dns # 初始化机器yum kernel等 make install-machine # 初始化网络 磁盘 make install-prepare-machine # 下载镜像 请确认docker运行中 注意： 若安装机器有网，且镜像源为外网，可跳过这不执行 make install-prepare-image # 安装k3s make install-k3s # 安装 node exporter make install-exporter # 安装 dns应用 make install-dns 5、为dns打上集群化补丁 这一节的所有操作请到master节点上执行；</description>
    </item>
    
  </channel>
</rss>
